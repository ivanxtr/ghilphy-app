{"version":3,"sources":["components/Slider.tsx","components/ViewContent.tsx","factories/index.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Slider","props","SubMenu","Menu","Sider","Layout","chooseCategory","width","className","mode","defaultSelectedKeys","defaultOpenKeys","style","height","borderRight","icon","UserOutlined","title","Item","onClick","LaptopOutlined","NotificationOutlined","ViewContent","Content","padding","margin","minHeight","data","Array","map","item","index","src","images","fixed_width_small","url","alt","cursor","window","open","tip","ApiCallsFactory","body","baseURL","this","axios","get","response","post","Error","App","Header","useState","setData","getTrending","useCallback","category","endpoint","a","customData","process","getData","getSearch","getByCustomSearch","subCategory","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81baefcf.chunk.js","sourcesContent":["import { Layout, Menu } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\n\ntype propsType = {\n  chooseCategory: (param: string) => void\n}\n\nconst Slider = (props: propsType) => {\n  const { SubMenu } = Menu;\n  const { Sider } = Layout;\n  const { chooseCategory } = props \n  return (\n    <>\n      <Sider width={200} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          <SubMenu key=\"trending\" icon={<UserOutlined />} title=\"Trending\">\n            <Menu.Item key=\"1\" onClick={() => chooseCategory('trending gifs')}>Gifs</Menu.Item>\n            <Menu.Item key=\"2\" onClick={() => chooseCategory('trending stickers')}>Stickers</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"translate\" icon={<LaptopOutlined />} title=\"Homer Simpson\">\n            <Menu.Item key=\"5\" onClick={() => chooseCategory('translate gifs')}>Gifs</Menu.Item>\n            <Menu.Item key=\"6\" onClick={() => chooseCategory('translate stickers')}>Stickers</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"Random\">\n            <Menu.Item key=\"9\" onClick={() => chooseCategory('coiding')}>coiding</Menu.Item>\n            <Menu.Item key=\"10\" onClick={() => chooseCategory('coding')}>coding</Menu.Item>\n            <Menu.Item key=\"11\" onClick={() => chooseCategory('grinning')}>grinning</Menu.Item>\n            <Menu.Item key=\"12\" onClick={() => chooseCategory('happy')}>happy</Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n    </>\n  )\n}\n\nexport default Slider\n","import { Layout, Spin } from 'antd';\n\ntype propsTypes = {\n  data: {\n    data: {}[],\n  }\n}\ntype mappedType = { \n  images: { \n    fixed_width_small: { \n      url: string \n    } \n  },\n  url: string\n}\n\nconst ViewContent = (props: propsTypes) => {\n  const { Content } = Layout;\n  return(\n    <>\n      <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            {\n              props.data instanceof Array ?\n                props.data.map((item: mappedType, index: number) => \n                  (<img\n                    key={index}\n                    src={item.images.fixed_width_small.url}\n                    alt=\"test\"\n                    style={{ margin: 10, cursor: 'pointer' }}\n                    onClick={() => window.open(item.url)}\n                  />)\n                ) \n                :\n                <Spin tip=\"Loading...\"/>\n            }\n          </Content> \n        </Layout>\n    </>\n  )\n}\n\nexport default ViewContent\n","import axios from 'axios'\n\nclass ApiCallsFactory {\n  private url: string\n  private body: object | undefined\n  private baseURL = `https://api.giphy.com/v1`\n\n  constructor(\n    url: string,\n    body?: object\n  ) {\n    this.url = `${this.baseURL}${url}`\n    this.body = body\n  }\n\n  public async getData() {\n    try {\n      const response = await axios.get(this.url, {\n      })\n      return response.data\n    } catch (error) {\n      return []\n    }\n  }\n\n  public async postData() {\n    try {\n      const response: any = await axios.post(this.url, this.body, {\n      })\n      return response.data\n    } catch (error) {\n      throw new Error(error)\n    }\n  }\n\n}\n\nexport {\n  ApiCallsFactory\n}\n","import React,{ useEffect, useCallback, useState } from 'react'\nimport { Layout } from 'antd';\nimport Slider from './Slider'\nimport ViewContent from './ViewContent'\nimport { ApiCallsFactory } from '../factories/index'\n\ntype trendingAssetsTypes = {\n  data: {}[]\n}\n\nconst App = () => {\n  const { Header } = Layout;\n  const [data, setData] = useState<trendingAssetsTypes>({data: []})\n\n  const getTrending = useCallback(async (category: string, endpoint: string) => {\n    const customData = new ApiCallsFactory(`/${category}/${endpoint}?api_key=${process.env.REACT_APP_KEY}&limit=25`)\n    const response = await customData.getData()\n    setData(response.data)\n  },[])\n\n  const getSearch = useCallback(async (category: string, endpoint: string) => {\n    const customData = new ApiCallsFactory(`/${category}/${endpoint}?api_key=${process.env.REACT_APP_KEY}&q=homer&limit=20`)\n    const response = await customData.getData()\n    setData(response.data)\n  },[])\n\n  const getByCustomSearch = useCallback(async (category: string, endpoint: string, subCategory: string) => {\n    const customData = new ApiCallsFactory(`/${category}/${endpoint}?api_key=${process.env.REACT_APP_KEY}&q=${subCategory}&limit=20`)\n    const response = await customData.getData()\n    setData(response.data)\n  },[])\n\n  const chooseCategory = (category: string) => {\n    switch (category) {\n      case 'trending gifs':\n        return getTrending('gifs', 'trending')\n      case 'trending stickers':\n        return getTrending('stickers', 'trending')\n      case 'translate gifs':\n        return getSearch('gifs', 'search')\n      case 'translate stickers':\n        return getSearch('stickers', 'search')\n      case 'coiding':\n        return getByCustomSearch('gifs', 'search', 'coiding')\n      case 'coding':\n        return getByCustomSearch('gifs', 'search', 'coding')\n      case 'grinning':\n        return getByCustomSearch('gifs', 'search', 'grinning') \n      case 'happy':\n        return getByCustomSearch('gifs', 'search', 'happy') \n      default:\n        break;\n    }\n  }\n\n  // mount\n  useEffect(() => {\n    getTrending('gifs', 'trending')\n  },[getTrending])\n\n  return(\n    <Layout>\n      <Header className=\"header\">\n        <h1 className=\"text-white\">Gilphy App</h1>\n      </Header>\n      <Layout>\n        <Slider chooseCategory={chooseCategory} />\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <ViewContent data={data}/>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'antd/dist/antd.css';\nimport './styles/App.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}